<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page import="java.util.HashMap"%>
<%@ include file="/inc_prg/common.jsp"%>
<%
	// 전달자료
	HashMap<String, Object> htData = null;
	HashMap<String, String> htMethod = null;

	// DB객체
	Statement stmtList = null;

	ResultSet rsList = null;

	CRs cRsList = null;

	//
	String G_INFO = "";

	try {
%>
<%@ include file="/inc_prg/connect.jsp"%>
<%
		// 전달자료
		htData = (HashMap<String, Object>)request.getAttribute("htData");
		htMethod = (HashMap<String, String>)request.getAttribute("htMethod_1");

		String PLUS_YN = htMethod.get("PLUS_YN");
		String WHERE_OLD = htMethod.get("WHERE_OLD");
		String WHERE_NEW = htMethod.get("WHERE_NEW");
		String PARAM_TX1 = htMethod.get("PARAM_TX1");
		String PARAM_TX2 = htMethod.get("PARAM_TX2");
		String ORDER_BY = htMethod.get("ORDER_BY");

		//
		if(PLUS_YN == null) { PLUS_YN = ""; }
		if(WHERE_OLD == null) { WHERE_OLD = ""; }
		if(WHERE_NEW == null) { WHERE_NEW = ""; }
		if(PARAM_TX1 == null) { PARAM_TX1 = ""; }
		if(PARAM_TX2 == null) { PARAM_TX2 = ""; }
		if(ORDER_BY == null) { ORDER_BY = ""; }

		// DB객체
		stmtList = connect.createStatement();

		/*

SELECT C.SORT_ORDER,
       CASE WHEN C.SORT_ORDER = '1' THEN '건강검진'  WHEN C.SORT_ORDER = '2' THEN '종합검진'
            WHEN C.SORT_ORDER = '3' THEN '의무검진'  WHEN C.SORT_ORDER = '4' THEN '특수검진'
            WHEN C.SORT_ORDER = '5' THEN '정밀검진'  WHEN C.SORT_ORDER = '6' THEN '혈액검진'
            WHEN C.SORT_ORDER = '8' THEN '뇌심혈관'  ELSE '기타검진' END EXAM_KIND, C.EXAM_CD,
       CASE WHEN C.EXAM_CD = '12001' THEN '생애검진 1차'
            WHEN C.EXAM_CD = '12002' THEN '생애검진 2차'
            WHEN C.EXAM_CD = '14001' THEN '구강검진'
            ELSE F_CODE_FIND('0401', C.EXAM_CD, '5', '1') END EXAM_NM,

       SUM(C.OLD_INSU) OLD_INSU, SUM(C.OLD_CNT)  OLD_CNT,  SUM(C.OLD_SUM) OLD_SUM,
       SUM(C.OLD_HDMD) OLD_HDMD, SUM(C.OLD_SDMD) OLD_SDMD, 
       SUM(C.OLD_COMPS+C.OLD_COMP) OLD_COMP, SUM(C.OLD_PSNL) OLD_PSNL,
       SUM(C.OLD_INDIRECT) OLD_INDIRECT, SUM(C.OLD_DIRECT) OLD_DIRECT,

IF (:PLUS_YN = 'Y') THEN
BEGIN       
       SUM(C.OLD_INSU+C.NEW_INSU) NEW_INSU, SUM(C.OLD_CNT+C.NEW_CNT) NEW_CNT, SUM(C.OLD_SUM+C.NEW_SUM) NEW_SUM, 
       SUM(C.OLD_HDMD+C.NEW_HDMD) NEW_HDMD, SUM(C.OLD_SDMD+C.NEW_SDMD) NEW_SDMD,
       SUM(C.OLD_COMPS+C.NEW_COMPS+C.OLD_COMP+C.NEW_COMP) NEW_COMP, SUM(C.OLD_PSNL+C.NEW_PSNL) NEW_PSNL,
       SUM(C.OLD_INDIRECT+C.NEW_INDIRECT) NEW_INDIRECT, SUM(C.OLD_DIRECT+C.NEW_DIRECT) NEW_DIRECT
END
ELSE
BEGIN       
       SUM(C.NEW_INSU) NEW_INSU, SUM(C.NEW_CNT)  NEW_CNT,  SUM(C.NEW_SUM) NEW_SUM,
       SUM(C.NEW_HDMD) NEW_HDMD, SUM(C.NEW_SDMD) NEW_SDMD,
       SUM(C.NEW_COMPS+C.NEW_COMP) NEW_COMP, SUM(C.NEW_PSNL)   NEW_PSNL,
       SUM(C.NEW_INDIRECT)       NEW_INDIRECT, SUM(C.NEW_DIRECT) NEW_DIRECT
END

  FROM (SELECT CASE WHEN A.EEA_EXAM_CD = '71001' THEN '9'
                    WHEN A.EEA_EXAM_CD = '91001' THEN '9'
                    WHEN A.EEA_EXAM_CD = '91006' THEN '9'
                    WHEN A.EEA_EXAM_CD = '91007' THEN '9'
                    WHEN A.EEA_EXAM_CD = '91099' THEN '9'
                    ELSE CASE WHEN SUBSTR(A.EEA_EXAM_CD, 1, 1) = '9' THEN '3'
                              ELSE SUBSTR(A.EEA_EXAM_CD, 1, 1) END END SORT_ORDER,
               CASE WHEN A.EEA_EXAM_CD = '12003' THEN '12001'
                    WHEN A.EEA_EXAM_CD = '12004' THEN '12002'
                    WHEN A.EEA_EXAM_CD = '14002' THEN '14001'
                    ELSE A.EEA_EXAM_CD END AS EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               B.INSU OLD_INSU, B.CNT OLD_CNT, B.HDMD_PR+B.SDMD_PR+B.COMPS_PR+B.COMP_PR+B.PSNL_PR OLD_SUM,
               0      NEW_INSU, 0     NEW_CNT, 0 NEW_SUM,
               B.HDMD_PR OLD_HDMD, 0 NEW_HDMD, B.SDMD_PR OLD_SDMD, 0 NEW_SDMD, B.COMPS_PR OLD_COMPS, 0 NEW_COMPS,
               B.COMP_PR OLD_COMP, 0 NEW_COMP, B.PSNL_PR OLD_PSNL, 0 NEW_PSNL,
               CASE WHEN A.EEA_CMPY_CD = '1' THEN B.COMPS_PR+B.COMP_PR ELSE 0 END+
               CASE WHEN A.EEA_PRPY_CD = '1' THEN B.PSNL_PR                       
                    WHEN A.EEA_PRPY_CD = '9' THEN B.PSNL_PR ELSE 0 END OLD_DIRECT,
               0 NEW_DIRECT,
               CASE WHEN A.EEA_CMPY_CD = '1' THEN 0 ELSE B.COMPS_PR+B.COMP_PR END+
               CASE WHEN A.EEA_PRPY_CD = '1' THEN 0
                    WHEN A.EEA_PRPY_CD = '9' THEN 0 ELSE B.PSNL_PR END OLD_INDIRECT,
               0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ, // 1 INSU, 1 CNT,
                       CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END INSU,
                       CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END CNT,
                       SUM(EEP_HDMD_PR) HDMD_PR, SUM(EEP_SDMD_PR) SDMD_PR, SUM(EEP_COMPS_PR) COMPS_PR,
                       SUM(EEP_COMP_PR) COMP_PR, SUM(EEP_PSNL_PR+EEP_PSNLP_PR) PSNL_PR
                  FROM ET_EXAM_PRICE 
                 :WHERE_OLD
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ 
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           AND A.EEA_INPT_ID <> '자료변환'

        UNION ALL
        SELECT CASE WHEN A.EEA_EXAM_CD = '71001' THEN '9'
                    WHEN A.EEA_EXAM_CD = '91001' THEN '9'
                    WHEN A.EEA_EXAM_CD = '91006' THEN '9'
                    WHEN A.EEA_EXAM_CD = '91007' THEN '9'
                    WHEN A.EEA_EXAM_CD = '91099' THEN '9'
                    ELSE CASE WHEN SUBSTR(A.EEA_EXAM_CD, 1, 1) = '9' THEN '3'
                              ELSE SUBSTR(A.EEA_EXAM_CD, 1, 1) END END SORT_ORDER,
               CASE WHEN A.EEA_EXAM_CD = '12003' THEN '12001'
                    WHEN A.EEA_EXAM_CD = '12004' THEN '12002'
                    WHEN A.EEA_EXAM_CD = '14002' THEN '14001'
                    ELSE A.EEA_EXAM_CD END AS EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0      OLD_INSU, 0     OLD_CNT, 0 OLD_SUM,
               B.INSU NEW_INSU, B.CNT NEW_CNT, B.HDMD_PR+B.SDMD_PR+B.COMPS_PR+B.COMP_PR+B.PSNL_PR NEW_SUM,
               0 OLD_HDMD, B.HDMD_PR NEW_HDMD, 0 OLD_SDMD, B.SDMD_PR NEW_SDMD, 0 OLD_COMPS, B.COMPS_PR NEW_COMPS,
               0 OLD_COMP, B.COMP_PR NEW_COMP, 0 OLD_PSNL, B.PSNL_PR NEW_PSNL,
               0 OLD_DIRECT,
               CASE WHEN A.EEA_CMPY_CD = '1' THEN B.COMPS_PR+B.COMP_PR ELSE 0 END+
               CASE WHEN A.EEA_PRPY_CD = '1' THEN B.PSNL_PR                       
                    WHEN A.EEA_PRPY_CD = '9' THEN B.PSNL_PR ELSE 0 END NEW_DIRECT,
               0 OLD_INDIRECT,
               CASE WHEN A.EEA_CMPY_CD = '1' THEN 0 ELSE B.COMPS_PR+B.COMP_PR END+
               CASE WHEN A.EEA_PRPY_CD = '1' THEN 0
                    WHEN A.EEA_PRPY_CD = '9' THEN 0 ELSE B.PSNL_PR END NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ, 
                       CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END INSU,
                       CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END CNT,
                       SUM(EEP_HDMD_PR) HDMD_PR, SUM(EEP_SDMD_PR) SDMD_PR, SUM(EEP_COMPS_PR) COMPS_PR,
                       SUM(EEP_COMP_PR) COMP_PR, SUM(EEP_PSNL_PR+EEP_PSNLP_PR) PSNL_PR
                  FROM ET_EXAM_PRICE
                 :WHERE_NEW; 
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           AND A.EEA_INPT_ID <> '자료변환'

        UNION ALL
        SELECT '1' SORT_ORDER,
               CASE WHEN A.EEA_HTSB_CD = '12003' THEN '12001'
                    WHEN A.EEA_HTSB_CD = '12004' THEN '12002'
                    WHEN A.EEA_HTSB_CD = '14002' THEN '14001'
                    ELSE A.EEA_HTSB_CD END AS EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, CNT OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, 0 NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD,   0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP,   0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ,
                       CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END INSU,
                       CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END CNT,
                       SUM(EEP_HDMD_PR) HDMD_PR, 0 SDMD_PR, 0 COMPS_PR, 0 COMP_PR, 0 PSNL_PR
                  FROM ET_EXAM_PRICE 
                 :WHERE_OLD
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_HTSB_YN = 'Y'
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           AND A.EEA_INPT_ID <> '자료변환'

        UNION ALL
        SELECT '1' SORT_ORDER,
               CASE WHEN A.EEA_HTSB_CD = '12003' THEN '12001'
                    WHEN A.EEA_HTSB_CD = '12004' THEN '12002'
                    WHEN A.EEA_HTSB_CD = '14002' THEN '14001'
                    ELSE A.EEA_HTSB_CD END AS EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, 0 OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, CNT NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0   OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ,
                       CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END INSU,
                       CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END CNT,
                       SUM(EEP_HDMD_PR) HDMD_PR
                  FROM ET_EXAM_PRICE
                 :WHERE_NEW
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_HTSB_YN = 'Y'
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           AND A.EEA_INPT_ID <> '자료변환'

        UNION ALL
        SELECT '1' SORT_ORDER,
               '13001' EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, 1 OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, 0 NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ
                  FROM ET_EXAM_PRICE
                 :WHERE_OLD
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_HTSB_CD LIKE '1%'
           AND A.EEA_HTSB_CD NOT IN ('13001')
           AND (NVL(A.EEA_STOMA_CD, '0') <> '0'
            OR  NVL(A.EEA_COLON_CD, '0') <> '0'
            OR  NVL(A.EEA_LIVER_CD, '0') <> '0'
            OR  NVL(A.EEA_BAST_CD,  '0') <> '0'
            OR  NVL(A.EEA_UTER_CD,  '0') <> '0'
            OR  NVL(A.EEA_LUNG_CD,  '0') <> '0')
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           
        UNION ALL
        SELECT '1' SORT_ORDER,
               '13001' EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, 0 OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, 1 NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ
                  FROM ET_EXAM_PRICE
                 :WHERE_NEW
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_HTSB_CD LIKE '1%'
           AND A.EEA_HTSB_CD NOT IN ('13001')
           AND (NVL(A.EEA_STOMA_CD, '0') <> '0'
            OR  NVL(A.EEA_COLON_CD, '0') <> '0'
            OR  NVL(A.EEA_LIVER_CD, '0') <> '0'
            OR  NVL(A.EEA_BAST_CD,  '0') <> '0'
            OR  NVL(A.EEA_UTER_CD,  '0') <> '0'
            OR  NVL(A.EEA_LUNG_CD,  '0') <> '0')                      
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'

        UNION ALL
        SELECT '1' SORT_ORDER,
               '14001' EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, 1 OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, 0 NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ
                  FROM ET_EXAM_PRICE
                 :WHERE_OLD
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_HTSB_CD LIKE '1%'
           AND A.EEA_HTSB_CD NOT IN ('14001', '14002')
           AND A.EEA_ORAL_YN = 'Y'
           AND A.EEA_ORALR_PR > 0
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           
        UNION ALL
        SELECT '1' SORT_ORDER,
               '14001' EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, 0 OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, 1 NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ
                  FROM ET_EXAM_PRICE
                 :WHERE_NEW
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_HTSB_CD LIKE '1%'
           AND A.EEA_HTSB_CD NOT IN ('14001', '14002')
           AND A.EEA_ORAL_YN = 'Y'
           AND A.EEA_ORALR_PR > 0
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'

        UNION ALL
        SELECT '4' SORT_ORDER, A.EEA_SPSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, 1 OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, 0 NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ
                  FROM ET_EXAM_PRICE
                 :WHERE_OLD
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_SPSB_YN = 'Y'
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           AND A.EEA_INPT_ID <> '자료변환'
           
        UNION ALL
        SELECT '4' SORT_ORDER, A.EEA_SPSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, 0 OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, 1 NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ
                  FROM ET_EXAM_PRICE 
                 :WHERE_NEW
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_SPSB_YN = 'Y'
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           AND A.EEA_INPT_ID <> '자료변환'
           
        UNION ALL
        SELECT '8' SORT_ORDER, A.EEA_CVSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, 1 OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, 0 NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ
                  FROM ET_EXAM_PRICE
                 :WHERE_OLD
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_ORDER_YN <> 'C'
           AND A.EEA_CVSB_YN = 'Y'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           AND A.EEA_INPT_ID <> '자료변환'

        UNION ALL
        SELECT '8' SORT_ORDER, A.EEA_CVSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, 0 OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, 1 NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ
                  FROM ET_EXAM_PRICE
                 :WHERE_NEW
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_CVSB_YN = 'Y'
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           AND A.EEA_INPT_ID <> '자료변환'

        UNION ALL
        SELECT '3' SORT_ORDER, A.EEA_EMSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, 1 OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, 0 NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ
                  FROM ET_EXAM_PRICE 
                 :WHERE_OLD
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_EMSB_YN = 'Y'
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           AND A.EEA_INPT_ID <> '자료변환'

        UNION ALL
        SELECT '3' SORT_ORDER, A.EEA_EMSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, 0 OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, 1 NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ
                  FROM ET_EXAM_PRICE
                 :WHERE_NEW
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_EMSB_YN = 'Y'
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           AND A.EEA_INPT_ID <> '자료변환'

        UNION ALL
        SELECT CASE WHEN A.EEA_ETSB_CD = '91001' THEN '9'
                    WHEN A.EEA_ETSB_CD = '91006' THEN '9'
                    WHEN A.EEA_ETSB_CD = '91007' THEN '9'
                    WHEN A.EEA_ETSB_CD = '91099' THEN '9'
                    ELSE '3' END SORT_ORDER,
               A.EEA_ETSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, 1 OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, 0 NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ
                  FROM ET_EXAM_PRICE
                 :WHERE_OLD
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_ETSB_YN = 'Y'
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           AND A.EEA_INPT_ID <> '자료변환'

        UNION ALL
        SELECT CASE WHEN A.EEA_ETSB_CD = '91001' THEN '9'
                    WHEN A.EEA_ETSB_CD = '91006' THEN '9'
                    WHEN A.EEA_ETSB_CD = '91007' THEN '9'
                    WHEN A.EEA_ETSB_CD = '91099' THEN '9'
                    ELSE '3' END SORT_ORDER,
               A.EEA_ETSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD,
               0 OLD_INSU, 0 OLD_CNT,  0 OLD_SUM,  0 NEW_INSU, 1 NEW_CNT,   0 NEW_SUM,
               0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS,
               0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL,
               0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD
          FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ
                  FROM ET_EXAM_PRICE 
                 :WHERE_NEW
                 GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ
               ) B, ET_EXAM_ACPT A
         WHERE A.EEA_EXAM_DT = B.EXAM_DT
           AND A.EEA_EXAM_SQ = B.EXAM_SQ
           AND A.EEA_ETSB_YN = 'Y'
           AND A.EEA_ORDER_YN <> 'C'
           AND NVL(A.EEA_RECE_NO, ' ') <> 'R'
           AND A.EEA_INPT_ID <> '자료변환'
       ) C
 WHERE 1 = 1 
   
 :PARAM_TX1
 :PARAM_TX2   
 :ORDER_BY


		*/

		sql = " SELECT C.SORT_ORDER, CASE WHEN C.SORT_ORDER = '1' THEN '건강검진' WHEN C.SORT_ORDER = '2' THEN '종합검진' WHEN C.SORT_ORDER = '3' THEN '의무검진' WHEN C.SORT_ORDER = '4' THEN '특수검진' WHEN C.SORT_ORDER = '5' THEN '정밀검진' WHEN C.SORT_ORDER = '6' THEN '혈액검진' WHEN C.SORT_ORDER = '8' THEN '뇌심혈관' ELSE '기타검진' END EXAM_KIND, C.EXAM_CD, CASE WHEN C.EXAM_CD = '12001' THEN '생애검진 1차' WHEN C.EXAM_CD = '12002' THEN '생애검진 2차' WHEN C.EXAM_CD = '14001' THEN '구강검진' ELSE F_CODE_FIND('0401', C.EXAM_CD, '5', '1') END EXAM_NM, SUM(C.OLD_INSU) OLD_INSU, SUM(C.OLD_CNT) OLD_CNT, SUM(C.OLD_SUM) OLD_SUM, SUM(C.OLD_HDMD) OLD_HDMD, SUM(C.OLD_SDMD) OLD_SDMD, SUM(C.OLD_COMPS+C.OLD_COMP) OLD_COMP, SUM(C.OLD_PSNL) OLD_PSNL, SUM(C.OLD_INDIRECT) OLD_INDIRECT, SUM(C.OLD_DIRECT) OLD_DIRECT,";

		if(PLUS_YN.equals("Y")) {
			sql += " SUM(C.OLD_INSU+C.NEW_INSU) NEW_INSU, SUM(C.OLD_CNT+C.NEW_CNT) NEW_CNT, SUM(C.OLD_SUM+C.NEW_SUM) NEW_SUM, SUM(C.OLD_HDMD+C.NEW_HDMD) NEW_HDMD, SUM(C.OLD_SDMD+C.NEW_SDMD) NEW_SDMD, SUM(C.OLD_COMPS+C.NEW_COMPS+C.OLD_COMP+C.NEW_COMP) NEW_COMP, SUM(C.OLD_PSNL+C.NEW_PSNL) NEW_PSNL, SUM(C.OLD_INDIRECT+C.NEW_INDIRECT) NEW_INDIRECT, SUM(C.OLD_DIRECT+C.NEW_DIRECT) NEW_DIRECT";
		} else {
			sql += " SUM(C.NEW_INSU) NEW_INSU, SUM(C.NEW_CNT) NEW_CNT, SUM(C.NEW_SUM) NEW_SUM, SUM(C.NEW_HDMD) NEW_HDMD, SUM(C.NEW_SDMD) NEW_SDMD, SUM(C.NEW_COMPS+C.NEW_COMP) NEW_COMP, SUM(C.NEW_PSNL) NEW_PSNL, SUM(C.NEW_INDIRECT) NEW_INDIRECT, SUM(C.NEW_DIRECT) NEW_DIRECT";
		}

		sql += " FROM (SELECT CASE WHEN A.EEA_EXAM_CD = '71001' THEN '9' WHEN A.EEA_EXAM_CD = '91001' THEN '9' WHEN A.EEA_EXAM_CD = '91006' THEN '9' WHEN A.EEA_EXAM_CD = '91007' THEN '9' WHEN A.EEA_EXAM_CD = '91099' THEN '9' ELSE CASE WHEN SUBSTR(A.EEA_EXAM_CD, 1, 1) = '9' THEN '3' ELSE SUBSTR(A.EEA_EXAM_CD, 1, 1) END END SORT_ORDER, CASE WHEN A.EEA_EXAM_CD = '12003' THEN '12001' WHEN A.EEA_EXAM_CD = '12004' THEN '12002' WHEN A.EEA_EXAM_CD = '14002' THEN '14001' ELSE A.EEA_EXAM_CD END AS EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, B.INSU OLD_INSU, B.CNT OLD_CNT, B.HDMD_PR+B.SDMD_PR+B.COMPS_PR+B.COMP_PR+B.PSNL_PR OLD_SUM, 0 NEW_INSU, 0 NEW_CNT, 0 NEW_SUM, B.HDMD_PR OLD_HDMD, 0 NEW_HDMD, B.SDMD_PR OLD_SDMD, 0 NEW_SDMD, B.COMPS_PR OLD_COMPS, 0 NEW_COMPS, B.COMP_PR OLD_COMP, 0 NEW_COMP, B.PSNL_PR OLD_PSNL, 0 NEW_PSNL, CASE WHEN A.EEA_CMPY_CD = '1' THEN B.COMPS_PR+B.COMP_PR ELSE 0 END+ CASE WHEN A.EEA_PRPY_CD = '1' THEN B.PSNL_PR WHEN A.EEA_PRPY_CD = '9' THEN B.PSNL_PR ELSE 0 END OLD_DIRECT, 0 NEW_DIRECT, CASE WHEN A.EEA_CMPY_CD = '1' THEN 0 ELSE B.COMPS_PR+B.COMP_PR END+ CASE WHEN A.EEA_PRPY_CD = '1' THEN 0 WHEN A.EEA_PRPY_CD = '9' THEN 0 ELSE B.PSNL_PR END OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ, CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END INSU, CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END CNT, SUM(EEP_HDMD_PR) HDMD_PR, SUM(EEP_SDMD_PR) SDMD_PR, SUM(EEP_COMPS_PR) COMPS_PR, SUM(EEP_COMP_PR) COMP_PR, SUM(EEP_PSNL_PR+EEP_PSNLP_PR) PSNL_PR";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_OLD;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";
		sql += " AND A.EEA_INPT_ID <> '자료변환'";

		sql += " UNION ALL";
		sql += " SELECT CASE WHEN A.EEA_EXAM_CD = '71001' THEN '9' WHEN A.EEA_EXAM_CD = '91001' THEN '9' WHEN A.EEA_EXAM_CD = '91006' THEN '9' WHEN A.EEA_EXAM_CD = '91007' THEN '9' WHEN A.EEA_EXAM_CD = '91099' THEN '9' ELSE CASE WHEN SUBSTR(A.EEA_EXAM_CD, 1, 1) = '9' THEN '3' ELSE SUBSTR(A.EEA_EXAM_CD, 1, 1) END END SORT_ORDER, CASE WHEN A.EEA_EXAM_CD = '12003' THEN '12001' WHEN A.EEA_EXAM_CD = '12004' THEN '12002' WHEN A.EEA_EXAM_CD = '14002' THEN '14001' ELSE A.EEA_EXAM_CD END AS EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 0 OLD_CNT, 0 OLD_SUM, B.INSU NEW_INSU, B.CNT NEW_CNT, B.HDMD_PR+B.SDMD_PR+B.COMPS_PR+B.COMP_PR+B.PSNL_PR NEW_SUM, 0 OLD_HDMD, B.HDMD_PR NEW_HDMD, 0 OLD_SDMD, B.SDMD_PR NEW_SDMD, 0 OLD_COMPS, B.COMPS_PR NEW_COMPS, 0 OLD_COMP, B.COMP_PR NEW_COMP, 0 OLD_PSNL, B.PSNL_PR NEW_PSNL, 0 OLD_DIRECT, CASE WHEN A.EEA_CMPY_CD = '1' THEN B.COMPS_PR+B.COMP_PR ELSE 0 END+ CASE WHEN A.EEA_PRPY_CD = '1' THEN B.PSNL_PR WHEN A.EEA_PRPY_CD = '9' THEN B.PSNL_PR ELSE 0 END NEW_DIRECT, 0 OLD_INDIRECT, CASE WHEN A.EEA_CMPY_CD = '1' THEN 0 ELSE B.COMPS_PR+B.COMP_PR END+ CASE WHEN A.EEA_PRPY_CD = '1' THEN 0 WHEN A.EEA_PRPY_CD = '9' THEN 0 ELSE B.PSNL_PR END NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ, CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END INSU, CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END CNT, SUM(EEP_HDMD_PR) HDMD_PR, SUM(EEP_SDMD_PR) SDMD_PR, SUM(EEP_COMPS_PR) COMPS_PR, SUM(EEP_COMP_PR) COMP_PR, SUM(EEP_PSNL_PR+EEP_PSNLP_PR) PSNL_PR";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_NEW;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";
		sql += " AND A.EEA_INPT_ID <> '자료변환'";

		sql += " UNION ALL";
		sql += " SELECT '1' SORT_ORDER, CASE WHEN A.EEA_HTSB_CD = '12003' THEN '12001' WHEN A.EEA_HTSB_CD = '12004' THEN '12002' WHEN A.EEA_HTSB_CD = '14002' THEN '14001' ELSE A.EEA_HTSB_CD END AS EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, CNT OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, 0 NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ, CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END INSU, CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END CNT, SUM(EEP_HDMD_PR) HDMD_PR, 0 SDMD_PR, 0 COMPS_PR, 0 COMP_PR, 0 PSNL_PR";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_OLD;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_HTSB_YN = 'Y'";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";
		sql += " AND A.EEA_INPT_ID <> '자료변환'";

		sql += " UNION ALL";
		sql += " SELECT '1' SORT_ORDER, CASE WHEN A.EEA_HTSB_CD = '12003' THEN '12001' WHEN A.EEA_HTSB_CD = '12004' THEN '12002' WHEN A.EEA_HTSB_CD = '14002' THEN '14001' ELSE A.EEA_HTSB_CD END AS EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 0 OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, CNT NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ, CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END INSU, CASE WHEN MIN(EEP_ORDER_SQ) = '1' THEN 1 ELSE 0 END CNT, SUM(EEP_HDMD_PR) HDMD_PR";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_NEW;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_HTSB_YN = 'Y'";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";
		sql += " AND A.EEA_INPT_ID <> '자료변환'";

		sql += " UNION ALL";
		sql += " SELECT '1' SORT_ORDER, '13001' EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 1 OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, 0 NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_OLD;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_HTSB_CD LIKE '1%'";
		sql += " AND A.EEA_HTSB_CD NOT IN ('13001')";
		sql += " AND (NVL(A.EEA_STOMA_CD, '0') <> '0'";
		sql += " OR NVL(A.EEA_COLON_CD, '0') <> '0'";
		sql += " OR NVL(A.EEA_LIVER_CD, '0') <> '0'";
		sql += " OR NVL(A.EEA_BAST_CD, '0') <> '0'";
		sql += " OR NVL(A.EEA_UTER_CD, '0') <> '0'";
		sql += " OR NVL(A.EEA_LUNG_CD, '0') <> '0')";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";

		sql += " UNION ALL";
		sql += " SELECT '1' SORT_ORDER, '13001' EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 0 OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, 1 NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_NEW;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_HTSB_CD LIKE '1%'";
		sql += " AND A.EEA_HTSB_CD NOT IN ('13001')";
		sql += " AND (NVL(A.EEA_STOMA_CD, '0') <> '0'";
		sql += " OR NVL(A.EEA_COLON_CD, '0') <> '0'";
		sql += " OR NVL(A.EEA_LIVER_CD, '0') <> '0'";
		sql += " OR NVL(A.EEA_BAST_CD, '0') <> '0'";
		sql += " OR NVL(A.EEA_UTER_CD, '0') <> '0'";
		sql += " OR NVL(A.EEA_LUNG_CD, '0') <> '0')";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";

		sql += " UNION ALL";
		sql += " SELECT '1' SORT_ORDER, '14001' EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 1 OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, 0 NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_OLD;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_HTSB_CD LIKE '1%'";
		sql += " AND A.EEA_HTSB_CD NOT IN ('14001', '14002')";
		sql += " AND A.EEA_ORAL_YN = 'Y'";
		sql += " AND A.EEA_ORALR_PR > 0";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";

		sql += " UNION ALL";
		sql += " SELECT '1' SORT_ORDER, '14001' EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 0 OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, 1 NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_NEW;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_HTSB_CD LIKE '1%'";
		sql += " AND A.EEA_HTSB_CD NOT IN ('14001', '14002')";
		sql += " AND A.EEA_ORAL_YN = 'Y'";
		sql += " AND A.EEA_ORALR_PR > 0";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";

		sql += " UNION ALL";
		sql += " SELECT '4' SORT_ORDER, A.EEA_SPSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 1 OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, 0 NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_OLD;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_SPSB_YN = 'Y'";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";
		sql += " AND A.EEA_INPT_ID <> '자료변환'";

		sql += " UNION ALL";
		sql += " SELECT '4' SORT_ORDER, A.EEA_SPSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 0 OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, 1 NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_NEW;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_SPSB_YN = 'Y'";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";
		sql += " AND A.EEA_INPT_ID <> '자료변환'";

		sql += " UNION ALL";
		sql += " SELECT '8' SORT_ORDER, A.EEA_CVSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 1 OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, 0 NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_OLD;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND A.EEA_CVSB_YN = 'Y'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";
		sql += " AND A.EEA_INPT_ID <> '자료변환'";

		sql += " UNION ALL";
		sql += " SELECT '8' SORT_ORDER, A.EEA_CVSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 0 OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, 1 NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_NEW;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_CVSB_YN = 'Y'";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";
		sql += " AND A.EEA_INPT_ID <> '자료변환'";

		sql += " UNION ALL";
		sql += " SELECT '3' SORT_ORDER, A.EEA_EMSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 1 OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, 0 NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_OLD;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_EMSB_YN = 'Y'";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";
		sql += " AND A.EEA_INPT_ID <> '자료변환'";

		sql += " UNION ALL";
		sql += " SELECT '3' SORT_ORDER, A.EEA_EMSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 0 OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, 1 NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_NEW;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_EMSB_YN = 'Y'";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";
		sql += " AND A.EEA_INPT_ID <> '자료변환'";

		sql += " UNION ALL";
		sql += " SELECT CASE WHEN A.EEA_ETSB_CD = '91001' THEN '9' WHEN A.EEA_ETSB_CD = '91006' THEN '9' WHEN A.EEA_ETSB_CD = '91007' THEN '9' WHEN A.EEA_ETSB_CD = '91099' THEN '9' ELSE '3' END SORT_ORDER, A.EEA_ETSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 1 OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, 0 NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_OLD;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_ETSB_YN = 'Y'";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";
		sql += " AND A.EEA_INPT_ID <> '자료변환'";

		sql += " UNION ALL";
		sql += " SELECT CASE WHEN A.EEA_ETSB_CD = '91001' THEN '9' WHEN A.EEA_ETSB_CD = '91006' THEN '9' WHEN A.EEA_ETSB_CD = '91007' THEN '9' WHEN A.EEA_ETSB_CD = '91099' THEN '9' ELSE '3' END SORT_ORDER, A.EEA_ETSB_CD EXAM_CD, A.EEA_CMPY_CD, A.EEA_PRPY_CD, 0 OLD_INSU, 0 OLD_CNT, 0 OLD_SUM, 0 NEW_INSU, 1 NEW_CNT, 0 NEW_SUM, 0 OLD_HDMD, 0 NEW_HDMD, 0 OLD_SDMD, 0 NEW_SDMD, 0 OLD_COMPS, 0 NEW_COMPS, 0 OLD_COMP, 0 NEW_COMP, 0 OLD_PSNL, 0 NEW_PSNL, 0 OLD_DIRECT, 0 NEW_DIRECT, 0 OLD_INDIRECT, 0 NEW_INDIRECT, A.EEA_PLCE_CD";
		sql += " FROM (SELECT EEP_EXAM_DT EXAM_DT, EEP_EXAM_SQ EXAM_SQ";
		sql += " FROM ET_EXAM_PRICE ";
		sql += WHERE_NEW;
		sql += " GROUP BY EEP_EXAM_DT, EEP_EXAM_SQ ) B, ET_EXAM_ACPT A";
		sql += " WHERE A.EEA_EXAM_DT = B.EXAM_DT";
		sql += " AND A.EEA_EXAM_SQ = B.EXAM_SQ";
		sql += " AND A.EEA_ETSB_YN = 'Y'";
		sql += " AND A.EEA_ORDER_YN <> 'C'";
		sql += " AND NVL(A.EEA_RECE_NO, ' ') <> 'R'";
		sql += " AND A.EEA_INPT_ID <> '자료변환' ) C";
		sql += " WHERE 1 = 1";
		
		sql += PARAM_TX1;
		sql += PARAM_TX2;
		sql += ORDER_BY;

			//
			G_INFO += "<!-- \n";
			G_INFO += "서비스명 : uAcpt_Sales_UP_Demand_Kd_001 \n";
			G_INFO += "설명 : 청구처별 현황 \n";
			G_INFO += "\n\n";

			G_INFO += "전달인자 : \n";
			G_INFO += " PLUS_YN : " + PLUS_YN + " \n";
			G_INFO += " WHERE_OLD : " + WHERE_OLD + " \n";
			G_INFO += " WHERE_NEW : " + WHERE_NEW + " \n";
			G_INFO += " PARAM_TX1 : " + PARAM_TX1 + " \n";
			G_INFO += " PARAM_TX2 : " + PARAM_TX2 + " \n";
			G_INFO += " ORDER_BY : " + ORDER_BY + " \n";
			G_INFO += "\n\n";

			G_INFO += "질의문 : " + sql + " \n";
			G_INFO += "-->";

		rsList = stmtList.executeQuery(sql);
		cRsList = new CRs(rsList);

		out.clear();		// include된 파일안의 공백 제거
		response.addHeader("Content-type", "text/xml");
%><?xml version="1.0" encoding="UTF-8"?>

<%= G_INFO%>

<nurionXml>
	<resultCode>200</resultCode>
	<resultXml>
		<xml xmlns:s='uuid:BDC6E3F0-6DA3-11d1-A2A3-00AA00C14882'
			xmlns:dt='uuid:C2F41010-65B3-11d1-A29F-00AA00C14882'
			xmlns:rs='urn:schemas-microsoft-com:rowset'
			xmlns:z='#RowsetSchema'>

<s:Schema id='RowsetSchema'>
	<s:ElementType name='row' content='eltOnly' rs:updatable='true'>
		<s:AttributeType name='SORT_ORDER' rs:number='1' rs:nullable='true'>
			<s:datatype dt:type='string' dt:maxLength='2'/>
		</s:AttributeType>
		<s:AttributeType name='EXAM_KIND' rs:number='2' rs:nullable='true'>
			<s:datatype dt:type='string' dt:maxLength='8' rs:fixedlength='true'/>
		</s:AttributeType>
		<s:AttributeType name='EXAM_CD' rs:number='3' rs:nullable='true'>
			<s:datatype dt:type='string' dt:maxLength='10'/>
		</s:AttributeType>
		<s:AttributeType name='EXAM_NM' rs:number='4' rs:nullable='true'>
			<s:datatype dt:type='string' dt:maxLength='4000'/>
		</s:AttributeType>
		<s:AttributeType name='OLD_INSU' rs:number='5' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='OLD_CNT' rs:number='6' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='OLD_SUM' rs:number='7' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='OLD_HDMD' rs:number='8' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='OLD_SDMD' rs:number='9' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='OLD_COMP' rs:number='10' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='OLD_PSNL' rs:number='11' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='OLD_INDIRECT' rs:number='12' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='OLD_DIRECT' rs:number='13' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='NEW_INSU' rs:number='14' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='NEW_CNT' rs:number='15' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='NEW_SUM' rs:number='16' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='NEW_HDMD' rs:number='17' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='NEW_SDMD' rs:number='18' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='NEW_COMP' rs:number='19' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='NEW_PSNL' rs:number='20' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='NEW_INDIRECT' rs:number='21' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:AttributeType name='NEW_DIRECT' rs:number='22' rs:nullable='true'>
			<s:datatype dt:type='number' rs:dbtype='varnumeric' dt:maxLength='38' rs:scale='255' rs:precision='38'/>
		</s:AttributeType>
		<s:extends type='rs:rowbase'/>
	</s:ElementType>
</s:Schema>

		<rs:data>
<%
		int cnt = 0;
		while(cRsList.next()) {

			cnt++;

			String SORT_ORDER_T = cRsList.getString("SORT_ORDER");
			String EXAM_KIND_T = cRsList.getString("EXAM_KIND");
			String EXAM_CD_T = cRsList.getString("EXAM_CD");
			String EXAM_NM_T = cRsList.getString("EXAM_NM");
			String OLD_INSU_T = cRsList.getString("OLD_INSU");
			String OLD_CNT_T = cRsList.getString("OLD_CNT");
			String OLD_SUM_T = cRsList.getString("OLD_SUM");
			String OLD_HDMD_T = cRsList.getString("OLD_HDMD");
			String OLD_SDMD_T = cRsList.getString("OLD_SDMD");
			String OLD_COMP_T = cRsList.getString("OLD_COMP");
			String OLD_PSNL_T = cRsList.getString("OLD_PSNL");
			String OLD_INDIRECT_T = cRsList.getString("OLD_INDIRECT");
			String OLD_DIRECT_T = cRsList.getString("OLD_DIRECT");
			String NEW_INSU_T = cRsList.getString("NEW_INSU");
			String NEW_CNT_T = cRsList.getString("NEW_CNT");
			String NEW_SUM_T = cRsList.getString("NEW_SUM");
			String NEW_HDMD_T = cRsList.getString("NEW_HDMD");
			String NEW_SDMD_T = cRsList.getString("NEW_SDMD");
			String NEW_COMP_T = cRsList.getString("NEW_COMP");
			String NEW_PSNL_T = cRsList.getString("NEW_PSNL");
			String NEW_INDIRECT_T = cRsList.getString("NEW_INDIRECT");
			String NEW_DIRECT_T = cRsList.getString("NEW_DIRECT");
%>
			<z:row
<%
			if(! SORT_ORDER_T.equals("")) {
%>
		 		SORT_ORDER='<%= SORT_ORDER_T%>'
<%
			}

			if(! EXAM_KIND_T.equals("")) {
%>
		 		EXAM_KIND='<%= EXAM_KIND_T%>'
<%
			}

			if(! EXAM_CD_T.equals("")) {
%>
		 		EXAM_CD='<%= EXAM_CD_T%>'
<%
			}

			if(! EXAM_NM_T.equals("")) {
%>
		 		EXAM_NM='<%= EXAM_NM_T%>'
<%
			}

			if(! OLD_INSU_T.equals("")) {
%>
		 		OLD_INSU='<%= OLD_INSU_T%>'
<%
			}

			if(! OLD_CNT_T.equals("")) {
%>
		 		OLD_CNT='<%= OLD_CNT_T%>'
<%
			}

			if(! OLD_SUM_T.equals("")) {
%>
		 		OLD_SUM='<%= OLD_SUM_T%>'
<%
			}

			if(! OLD_HDMD_T.equals("")) {
%>
		 		OLD_HDMD='<%= OLD_HDMD_T%>'
<%
			}

			if(! OLD_SDMD_T.equals("")) {
%>
		 		OLD_SDMD='<%= OLD_SDMD_T%>'
<%
			}

			if(! OLD_COMP_T.equals("")) {
%>
		 		OLD_COMP='<%= OLD_COMP_T%>'
<%
			}

			if(! OLD_PSNL_T.equals("")) {
%>
		 		OLD_PSNL='<%= OLD_PSNL_T%>'
<%
			}

			if(! OLD_INDIRECT_T.equals("")) {
%>
		 		OLD_INDIRECT='<%= OLD_INDIRECT_T%>'
<%
			}

			if(! OLD_DIRECT_T.equals("")) {
%>
		 		OLD_DIRECT='<%= OLD_DIRECT_T%>'
<%
			}

			if(! NEW_INSU_T.equals("")) {
%>
		 		NEW_INSU='<%= NEW_INSU_T%>'
<%
			}

			if(! NEW_CNT_T.equals("")) {
%>
		 		NEW_CNT='<%= NEW_CNT_T%>'
<%
			}

			if(! NEW_SUM_T.equals("")) {
%>
		 		NEW_SUM='<%= NEW_SUM_T%>'
<%
			}

			if(! NEW_HDMD_T.equals("")) {
%>
		 		NEW_HDMD='<%= NEW_HDMD_T%>'
<%
			}

			if(! NEW_SDMD_T.equals("")) {
%>
		 		NEW_SDMD='<%= NEW_SDMD_T%>'
<%
			}

			if(! NEW_COMP_T.equals("")) {
%>
		 		NEW_COMP='<%= NEW_COMP_T%>'
<%
			}

			if(! NEW_PSNL_T.equals("")) {
%>
		 		NEW_PSNL='<%= NEW_PSNL_T%>'
<%
			}

			if(! NEW_INDIRECT_T.equals("")) {
%>
		 		NEW_INDIRECT='<%= NEW_INDIRECT_T%>'
<%
			}

			if(! NEW_DIRECT_T.equals("")) {
%>
		 		NEW_DIRECT='<%= NEW_DIRECT_T%>'
<%
			}
%>
			/>
<%
		}
%>
		</rs:data>
		</xml>
	</resultXml>
	<errorMsg></errorMsg>
</nurionXml>

<%
	} catch (Exception e) {

		out.clear();		// include된 파일안의 공백 제거
		response.addHeader("Content-type", "text/xml");
%><?xml version="1.0" encoding="UTF-8"?>

<%= G_INFO%>

<nurionXml>
	<resultCode>400</resultCode>
	<resultXml></resultXml>
	<errorMsg><![CDATA[<%= e.toString()%>]]></errorMsg>
	<sql><![CDATA[<%= sql%>]]></sql>
</nurionXml>

<%
	} finally {

		if(rsList != null) {
			rsList.close();
			rsList = null;
		}

		if(stmtList != null) {
			stmtList.close();
			stmtList = null;
		}
%>
<%@ include file="/inc_prg/disconnect.jsp"%>
<%
	}
%>
